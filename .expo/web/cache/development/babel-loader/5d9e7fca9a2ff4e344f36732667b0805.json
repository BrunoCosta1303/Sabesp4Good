{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Picker } from '@react-native-picker/picker';\nexport default function Report(_ref) {\n  var navigation = _ref.navigation;\n\n  var _require = require(\"../assets/db.json\"),\n      nome = _require.nome,\n      data = _require.data,\n      propriedades = _require.propriedades;\n\n  var _useState = useState(['Selecione um sistema', 'Guarapiranga', 'Cantareira', 'Alto Tietê', 'Marsilac', 'Oriental', 'Rio Claro']),\n      _useState2 = _slicedToArray(_useState, 1),\n      sistema = _useState2[0];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      sistemaSelecionado = _useState4[0],\n      setsistemaSelecionado = _useState4[1];\n\n  var _useState5 = useState(['Selecione o periodo', 'JAN', 'FEV']),\n      _useState6 = _slicedToArray(_useState5, 1),\n      periodo = _useState6[0];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      periodoSelecionado = _useState8[0],\n      setperiodoSelecionado = _useState8[1];\n\n  var pressHandler = function pressHandler() {\n    navigation.goBack();\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Image, {\n    source: require(\"../assets/SabespLogo.png\"),\n    style: styles.logo\n  }), React.createElement(Picker, {\n    selectedValue: sistemaSelecionado,\n    style: {\n      height: 30,\n      width: 150,\n      alignSelf: 'center'\n    },\n    onValueChange: function onValueChange(itemValue) {\n      return setsistemaSelecionado(itemValue);\n    }\n  }, sistema.map(function (cr) {\n    return React.createElement(Picker.Item, {\n      label: cr,\n      value: cr\n    });\n  })), React.createElement(Picker, {\n    selectedValue: periodoSelecionado,\n    style: {\n      height: 30,\n      width: 150,\n      alignSelf: 'center'\n    },\n    onValueChange: function onValueChange(itemValue) {\n      return setperiodoSelecionado(itemValue);\n    }\n  }, periodo.map(function (cr) {\n    return React.createElement(Picker.Item, {\n      label: cr,\n      value: cr\n    });\n  })));\n}\n;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'flex-start'\n  },\n  logo: {\n    marginTop: 30,\n    marginBottom: 30,\n    width: '12%',\n    height: '12%',\n    alignSelf: 'flex-start'\n  }\n});","map":{"version":3,"sources":["C:/Users/bcosta/3ECA_ford/Sabesp4Good-main/Sabesp4Good-main/screens/report.js"],"names":["React","useState","Picker","Report","navigation","require","nome","data","propriedades","sistema","sistemaSelecionado","setsistemaSelecionado","periodo","periodoSelecionado","setperiodoSelecionado","pressHandler","goBack","styles","container","logo","height","width","alignSelf","itemValue","map","cr","StyleSheet","create","flex","backgroundColor","alignItems","marginTop","marginBottom"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;AAEA,SAAQC,MAAR,QAAqB,6BAArB;AAEA,eAAe,SAASC,MAAT,OAAgC;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAG3C,iBAAmCC,OAAO,qBAA1C;AAAA,MAAOC,IAAP,YAAOA,IAAP;AAAA,MAAaC,IAAb,YAAaA,IAAb;AAAA,MAAmBC,YAAnB,YAAmBA,YAAnB;;AAEA,kBAAkBP,QAAQ,CAAC,CAAC,sBAAD,EAAyB,cAAzB,EAAyC,YAAzC,EAAuD,YAAvD,EAAqE,UAArE,EAAiF,UAAjF,EAA6F,WAA7F,CAAD,CAA1B;AAAA;AAAA,MAAOQ,OAAP;;AACA,mBAAoDR,QAAQ,CAAC,EAAD,CAA5D;AAAA;AAAA,MAAOS,kBAAP;AAAA,MAA2BC,qBAA3B;;AAEA,mBAAkBV,QAAQ,CAAC,CAAC,qBAAD,EAAwB,KAAxB,EAA+B,KAA/B,CAAD,CAA1B;AAAA;AAAA,MAAOW,OAAP;;AACA,mBAAoDX,QAAQ,CAAC,EAAD,CAA5D;AAAA;AAAA,MAAOY,kBAAP;AAAA,MAA2BC,qBAA3B;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBX,IAAAA,UAAU,CAACY,MAAX;AACD,GAFD;;AAIA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,KACE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEb,OAAO,4BAAtB;AAAoD,IAAA,KAAK,EAAEY,MAAM,CAACE;AAAlE,IADF,EAEE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAET,kBADjB;AAEE,IAAA,KAAK,EAAE;AAACU,MAAAA,MAAM,EAAC,EAAR;AAAYC,MAAAA,KAAK,EAAE,GAAnB;AAAwBC,MAAAA,SAAS,EAAC;AAAlC,KAFT;AAGE,IAAA,aAAa,EAAE,uBAACC,SAAD;AAAA,aACbZ,qBAAqB,CAACY,SAAD,CADR;AAAA;AAHjB,KAOMd,OAAO,CAACe,GAAR,CAAY,UAAAC,EAAE,EAAG;AACf,WAAO,oBAAC,MAAD,CAAQ,IAAR;AAAa,MAAA,KAAK,EAAEA,EAApB;AAAwB,MAAA,KAAK,EAAEA;AAA/B,MAAP;AACD,GAFD,CAPN,CAFF,EAcE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAEZ,kBADjB;AAEE,IAAA,KAAK,EAAE;AAACO,MAAAA,MAAM,EAAC,EAAR;AAAYC,MAAAA,KAAK,EAAE,GAAnB;AAAwBC,MAAAA,SAAS,EAAC;AAAlC,KAFT;AAGE,IAAA,aAAa,EAAE,uBAACC,SAAD;AAAA,aACbT,qBAAqB,CAACS,SAAD,CADR;AAAA;AAHjB,KAOMX,OAAO,CAACY,GAAR,CAAY,UAAAC,EAAE,EAAG;AACf,WAAO,oBAAC,MAAD,CAAQ,IAAR;AAAa,MAAA,KAAK,EAAEA,EAApB;AAAwB,MAAA,KAAK,EAAEA;AAA/B,MAAP;AACD,GAFD,CAPN,CAdF,CADF;AA6BH;AAAA;AAED,IAAMR,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC/BT,EAAAA,SAAS,EAAE;AACTU,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE;AAHH,GADoB;AAM/BX,EAAAA,IAAI,EAAE;AACJY,IAAAA,SAAS,EAAE,EADP;AAEJC,IAAAA,YAAY,EAAE,EAFV;AAGJX,IAAAA,KAAK,EAAE,KAHH;AAIJD,IAAAA,MAAM,EAAE,KAJJ;AAKJE,IAAAA,SAAS,EAAE;AALP;AANyB,CAAlB,CAAf","sourcesContent":["import React, {useState} from 'react';\nimport { StyleSheet, Text, View, Image } from 'react-native';\nimport {Picker} from '@react-native-picker/picker';\n\nexport default function Report({ navigation }) {\n  \n    //let reportRequest = new Request('../assets/db.json');\n    const {nome, data, propriedades} = require('../assets/db.json')\n\n    const [sistema] = useState(['Selecione um sistema', 'Guarapiranga', 'Cantareira', 'Alto Tietê', 'Marsilac', 'Oriental', 'Rio Claro'])\n    const [sistemaSelecionado, setsistemaSelecionado] = useState([])\n\n    const [periodo] = useState(['Selecione o periodo', 'JAN', 'FEV'])\n    const [periodoSelecionado, setperiodoSelecionado] = useState([])\n\n    const pressHandler = () => {\n      navigation.goBack();\n    }\n    \n    return (\n      <View style={styles.container}>\n        <Image source={require('../assets/SabespLogo.png')} style={styles.logo}/>\n        <Picker\n          selectedValue={sistemaSelecionado}\n          style={{height:30, width: 150, alignSelf:'center'}}\n          onValueChange={(itemValue) =>\n            setsistemaSelecionado(itemValue)\n          }>\n            {\n              sistema.map(cr =>{\n                return <Picker.Item label={cr} value={cr} />\n              })\n            }\n        </Picker>\n        <Picker\n          selectedValue={periodoSelecionado}\n          style={{height:30, width: 150, alignSelf:'center'}}\n          onValueChange={(itemValue) =>\n            setperiodoSelecionado(itemValue)\n          }>\n            {\n              periodo.map(cr =>{\n                return <Picker.Item label={cr} value={cr} />\n              })\n            }\n        </Picker>\n      </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'flex-start',\n  },\n  logo: {\n    marginTop: 30,\n    marginBottom: 30,\n    width: '12%',\n    height: '12%',\n    alignSelf: 'flex-start'\n\n  },\n});"]},"metadata":{},"sourceType":"module"}