{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Picker } from '@react-native-picker/picker';\n\nvar HomeScreen = function (_React$Component) {\n  _inherits(HomeScreen, _React$Component);\n\n  var _super = _createSuper(HomeScreen);\n\n  function HomeScreen() {\n    _classCallCheck(this, HomeScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(HomeScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var pressHandler = function pressHandler() {\n        navigation.goBack();\n      };\n\n      var _useState = useState(['Cantareira', 'Guarapiranga']),\n          _useState2 = _slicedToArray(_useState, 2),\n          sistema = _useState2[0],\n          setSistema = _useState2[1];\n\n      var _useState3 = useState([]),\n          _useState4 = _slicedToArray(_useState3, 2),\n          sistemaSelecionado = _useState4[0],\n          setSistemaSelecionado = _useState4[1];\n\n      var _useState5 = useState(['setembro', 'outubro']),\n          _useState6 = _slicedToArray(_useState5, 2),\n          periodo = _useState6[0],\n          setPeriodo = _useState6[1];\n\n      var _useState7 = useState([]),\n          _useState8 = _slicedToArray(_useState7, 2),\n          periodoSelecionado = _useState8[0],\n          setPeriodoSelecionado = _useState8[1];\n\n      return React.createElement(View, {\n        style: styles.container\n      }, React.createElement(Image, {\n        source: require(\"../assets/SabespLogo.png\"),\n        style: styles.logo\n      }), React.createElement(Picker, {\n        selectedValue: \"selecione o sistema\",\n        style: {\n          height: 30,\n          width: 150,\n          alignSelf: 'center'\n        },\n        onValueChange: function onValueChange(itemValue, itemIndex) {\n          return _this.setState({\n            sistema: itemValue\n          });\n        }\n      }, sistema.map(function (cr) {\n        return React.createElement(Picker.Item, {\n          label: cr,\n          value: cr\n        });\n      })), React.createElement(Picker, {\n        selectedValue: \"selecione o periodo\",\n        style: {\n          height: 30,\n          width: 150,\n          alignSelf: 'center'\n        },\n        onValueChange: function onValueChange(itemValue, itemIndex) {\n          return _this.setState({\n            periodo: itemValue\n          });\n        }\n      }, periodo.map(function (cr) {\n        return React.createElement(Picker.Item, {\n          label: cr,\n          value: cr\n        });\n      })));\n    }\n  }]);\n\n  return HomeScreen;\n}(React.Component);\n\nexport { HomeScreen as default };\n;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'left'\n  },\n  logo: {\n    marginTop: 30,\n    marginBottom: 30,\n    width: '10%',\n    height: '10%',\n    alignSelf: 'left'\n  }\n});","map":{"version":3,"sources":["C:/Users/bcosta/3ECA_ford/Sabesp4Good-main/Sabesp4Good-main/screens/report.js"],"names":["React","useState","Picker","HomeScreen","pressHandler","navigation","goBack","sistema","setSistema","sistemaSelecionado","setSistemaSelecionado","periodo","setPeriodo","periodoSelecionado","setPeriodoSelecionado","styles","container","require","logo","height","width","alignSelf","itemValue","itemIndex","setState","map","cr","Component","StyleSheet","create","flex","backgroundColor","alignItems","marginTop","marginBottom"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;AAEA,SAAQC,MAAR,QAAqB,6BAArB;;IAEqBC,U;;;;;;;;;;;;;WACnB,kBAAS;AAAA;;AACP,UAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBC,QAAAA,UAAU,CAACC,MAAX;AACD,OAFD;;AAIA,sBAA8BL,QAAQ,CAAC,CAAC,YAAD,EAAe,cAAf,CAAD,CAAtC;AAAA;AAAA,UAAOM,OAAP;AAAA,UAAgBC,UAAhB;;AACA,uBAAoDP,QAAQ,CAAC,EAAD,CAA5D;AAAA;AAAA,UAAOQ,kBAAP;AAAA,UAA2BC,qBAA3B;;AACA,uBAA8BT,QAAQ,CAAC,CAAC,UAAD,EAAa,SAAb,CAAD,CAAtC;AAAA;AAAA,UAAOU,OAAP;AAAA,UAAgBC,UAAhB;;AACA,uBAAoDX,QAAQ,CAAC,EAAD,CAA5D;AAAA;AAAA,UAAOY,kBAAP;AAAA,UAA2BC,qBAA3B;;AACA,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,SACE,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAEC,OAAO,4BAAtB;AAAoD,QAAA,KAAK,EAAEF,MAAM,CAACG;AAAlE,QADF,EAEE,oBAAC,MAAD;AACE,QAAA,aAAa,EAAC,qBADhB;AAEE,QAAA,KAAK,EAAE;AAACC,UAAAA,MAAM,EAAC,EAAR;AAAYC,UAAAA,KAAK,EAAE,GAAnB;AAAwBC,UAAAA,SAAS,EAAC;AAAlC,SAFT;AAGE,QAAA,aAAa,EAAE,uBAACC,SAAD,EAAYC,SAAZ;AAAA,iBACb,KAAI,CAACC,QAAL,CAAc;AAACjB,YAAAA,OAAO,EAAEe;AAAV,WAAd,CADa;AAAA;AAHjB,SAOMf,OAAO,CAACkB,GAAR,CAAY,UAAAC,EAAE,EAAI;AAChB,eAAO,oBAAC,MAAD,CAAQ,IAAR;AAAa,UAAA,KAAK,EAAEA,EAApB;AAAwB,UAAA,KAAK,EAAEA;AAA/B,UAAP;AACD,OAFD,CAPN,CAFF,EAcE,oBAAC,MAAD;AACE,QAAA,aAAa,EAAC,qBADhB;AAEE,QAAA,KAAK,EAAE;AAACP,UAAAA,MAAM,EAAC,EAAR;AAAYC,UAAAA,KAAK,EAAE,GAAnB;AAAwBC,UAAAA,SAAS,EAAC;AAAlC,SAFT;AAGE,QAAA,aAAa,EAAE,uBAACC,SAAD,EAAYC,SAAZ;AAAA,iBACb,KAAI,CAACC,QAAL,CAAc;AAACb,YAAAA,OAAO,EAAEW;AAAV,WAAd,CADa;AAAA;AAHjB,SAOMX,OAAO,CAACc,GAAR,CAAY,UAAAC,EAAE,EAAI;AAChB,eAAO,oBAAC,MAAD,CAAQ,IAAR;AAAa,UAAA,KAAK,EAAEA,EAApB;AAAwB,UAAA,KAAK,EAAEA;AAA/B,UAAP;AACD,OAFD,CAPN,CAdF,CADF;AA6BD;;;;EAvCqC1B,KAAK,CAAC2B,S;;SAAzBxB,U;AAwCpB;AAED,IAAMY,MAAM,GAAGa,UAAU,CAACC,MAAX,CAAkB;AAC/Bb,EAAAA,SAAS,EAAE;AACTc,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE;AAHH,GADoB;AAM/Bd,EAAAA,IAAI,EAAE;AACJe,IAAAA,SAAS,EAAE,EADP;AAEJC,IAAAA,YAAY,EAAE,EAFV;AAGJd,IAAAA,KAAK,EAAE,KAHH;AAIJD,IAAAA,MAAM,EAAE,KAJJ;AAKJE,IAAAA,SAAS,EAAE;AALP;AANyB,CAAlB,CAAf","sourcesContent":["import React, {useState} from 'react';\nimport { StyleSheet, Text, View, Image } from 'react-native';\nimport {Picker} from '@react-native-picker/picker';\n\nexport default class HomeScreen extends React.Component {\n  render() {\n    const pressHandler = () => {\n      navigation.goBack();\n    }\n\n    const [sistema, setSistema] = useState(['Cantareira', 'Guarapiranga'])\n    const [sistemaSelecionado, setSistemaSelecionado] = useState([])\n    const [periodo, setPeriodo] = useState(['setembro', 'outubro'])\n    const [periodoSelecionado, setPeriodoSelecionado] = useState([])\n    return (\n      <View style={styles.container}>\n        <Image source={require('../assets/SabespLogo.png')} style={styles.logo}/>\n        <Picker\n          selectedValue='selecione o sistema'\n          style={{height:30, width: 150, alignSelf:'center'}}\n          onValueChange={(itemValue, itemIndex) =>\n            this.setState({sistema: itemValue})\n          }>\n            {\n              sistema.map(cr => {\n                return <Picker.Item label={cr} value={cr}/>\n              })\n            }\n        </Picker>\n        <Picker\n          selectedValue='selecione o periodo'\n          style={{height:30, width: 150, alignSelf:'center'}}\n          onValueChange={(itemValue, itemIndex) =>\n            this.setState({periodo: itemValue})\n          }>\n            {\n              periodo.map(cr => {\n                return <Picker.Item label={cr} value={cr}/>\n              })\n            }\n        </Picker>\n      </View>\n    );\n  };\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'left',\n  },\n  logo: {\n    marginTop: 30,\n    marginBottom: 30,\n    width: '10%',\n    height: '10%',\n    alignSelf: 'left'\n\n  },\n});"]},"metadata":{},"sourceType":"module"}